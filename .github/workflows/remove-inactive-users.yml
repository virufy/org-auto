name: Identify and Remove Inactive Users

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs weekly on Sunday at midnight
  workflow_dispatch:  # Allows manual triggering

jobs:
  identify-inactive-users:
    name: Identify Inactive Users
    runs-on: ubuntu-latest
    steps:
      - name: Analyze User Activity
        id: analyze_user_activity
        uses: peter-murray/inactive-users-action@v1
        with:
          token: ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}
          organization: Virufy
          activity_days: 31

      - name: Save Report of Inactive Users
        run: |
          echo "Saving report of inactive users..."
          cp "${{ steps.analyze_user_activity.outputs.report_json }}" inactive_users.json
          cat inactive_users.json

      - name: Upload Inactive Users Report
        uses: actions/upload-artifact@v4
        with:
          name: inactive-users-report
          path: inactive_users.json

  remove-inactive-users:
    name: Remove Inactive Users
    needs: identify-inactive-users
    runs-on: ubuntu-latest
    steps:
      - name: Download Inactive Users Report
        uses: actions/download-artifact@v4
        with:
          name: inactive-users-report

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Verify GitHub CLI installation
        run: gh --version

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.ORGANIZATION_ACCESS_TOKEN }}" | gh auth login --with-token

      - name: Download Excluded Users List
        run: |
          curl -o excluded_users.txt https://raw.githubusercontent.com/virufy/org-auto/main/excluded_users.txt

      - name: Remove Users from Organization (Excluding Certain Users)
        run: |
          echo "Reading inactive users from report..."
          jq -r '.[] | select(.last_active_days > 31) | .login' inactive_users.json | while read -r user; do
            if grep -q "^$user$" excluded_users.txt; then
              echo "Skipping excluded user $user"
            else
              echo "Removing user $user from organization..."
              gh api -X DELETE orgs/Virufy/members/$user || echo "Failed to remove user $user"
              echo "Removed user $user successfully."
            fi
          done
