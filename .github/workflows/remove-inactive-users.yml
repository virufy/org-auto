name: Identify and Remove Inactive Users

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs weekly on Sunday at midnight
  workflow_dispatch:  # Allows manual triggering

jobs:
  identify-inactive-users:
    name: Identify Inactive Users
    runs-on: ubuntu-latest
    steps:
      - name: Analyze User Activity
        id: analyze_user_activity
        uses: peter-murray/inactive-users-action@v1
        with:
          token: ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}
          organization: Virufy
          activity_days: 31

      - name: Save Report of Inactive Users
        run: |
          echo "Saving report of inactive users..."
          cp "${{ steps.analyze_user_activity.outputs.report_json }}" inactive_users.json

      - name: Debug Inactive Users JSON
        run: |
          echo "Contents of inactive_users.json:"
          cat inactive_users.json

      - name: Upload Inactive Users Report
        uses: actions/upload-artifact@v4
        with:
          name: inactive-users-report
          path: inactive_users.json

  remove-inactive-users:
    name: Remove Inactive Users
    needs: identify-inactive-users
    runs-on: ubuntu-latest
    steps:
      - name: Download Inactive Users Report
        uses: actions/download-artifact@v4
        with:
          name: inactive-users-report

      - name: Create Excluded Users List from Secret (Optional)
        run: |
          echo "${{ secrets.EXCLUDED_USERS }}" > excluded_users.txt

      - name: Debug Excluded Users List (Optional)
        run: |
          echo "Contents of excluded_users.txt:"
          cat excluded_users.txt || echo "File not found or empty"

      - name: Debug JQ Output
        run: |
          echo "Filtered inactive users:"
          jq -r '.[] | select(.last_active_days > 31) | .login' inactive_users.json || echo "No matching users found"

      - name: Remove Users from Organization (Excluding Certain Users)
        run: |
          echo "Reading inactive users from report..."
          jq -r '.[] | select(.last_active_days > 31) | .login' inactive_users.json | while read -r user; do
            if [ -z "$user" ]; then
              echo "No inactive users found."
              exit 0
            fi

            if grep -Fxq "$user" excluded_users.txt; then
              echo "Skipping excluded user $user"
            else
              echo "Removing user $user from organization..."
              gh api -X DELETE orgs/Virufy/members/$user || echo "Failed to remove user $user"
              echo "Removed user $user successfully."
            fi
          done
