name: Track User Activity

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  fetch-user-activity:
    name: Fetch User Activity
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Install jq (for JSON processing)
      - name: Install jq
        run: sudo apt-get install jq -y

      # Step 3: Fetch Organization Members
      - name: Fetch Organization Members
        run: |
          echo "Fetching organization members..."
          curl -H "Authorization: Bearer ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}" \
            https://api.github.com/orgs/virufy/members \
            | jq '.' > org_members.json
          echo "Organization members saved to org_members.json"

      # Step 4: Fetch User Activity for Each Member
      - name: Fetch User Activity
        run: |
          echo "Fetching user activity..."
          jq -r '.[].login' org_members.json | while read username; do
            echo "Fetching events for $username..."
            curl -H "Authorization: Bearer ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}" \
              https://api.github.com/users/$username/events \
              | jq '[.[] | {type, created_at}]' > ${username}_events.json
            
            # Get the most recent event timestamp
            last_active=$(jq -r '.[0].created_at // empty' ${username}_events.json)
            
            if [ -n "$last_active" ]; then
              echo "{\"login\": \"$username\", \"last_active\": \"$last_active\"}" >> user_activity.json
            else
              echo "{\"login\": \"$username\", \"last_active\": null}" >> user_activity.json
            fi
          done

      # Step 5: Save Results as an Artifact
      - name: Upload User Activity Report
        uses: actions/upload-artifact@v4
        with:
          name: user-activity-report
          path: user_activity.json
